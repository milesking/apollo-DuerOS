// Generated by the protocol buffer compiler.  DO NOT EDIT!

package com.baidu.carlife.protobuf;

public final class CarlifeCarGpsProto {
  private CarlifeCarGpsProto() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public static final class CarlifeCarGps extends
      com.google.protobuf.GeneratedMessage {
    // Use CarlifeCarGps.newBuilder() to construct.
    private CarlifeCarGps() {}
    
    private static final CarlifeCarGps defaultInstance = new CarlifeCarGps();
    public static CarlifeCarGps getDefaultInstance() {
      return defaultInstance;
    }
    
    public CarlifeCarGps getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.baidu.carlife.protobuf.CarlifeCarGpsProto.internal_static_com_baidu_carlife_protobuf_CarlifeCarGps_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.baidu.carlife.protobuf.CarlifeCarGpsProto.internal_static_com_baidu_carlife_protobuf_CarlifeCarGps_fieldAccessorTable;
    }
    
    // required uint32 antennaState = 1;
    public static final int ANTENNASTATE_FIELD_NUMBER = 1;
    private boolean hasAntennaState;
    private int antennaState_ = 0;
    public boolean hasAntennaState() { return hasAntennaState; }
    public int getAntennaState() { return antennaState_; }
    
    // required uint32 signalQuality = 2;
    public static final int SIGNALQUALITY_FIELD_NUMBER = 2;
    private boolean hasSignalQuality;
    private int signalQuality_ = 0;
    public boolean hasSignalQuality() { return hasSignalQuality; }
    public int getSignalQuality() { return signalQuality_; }
    
    // required int32 latitude = 3;
    public static final int LATITUDE_FIELD_NUMBER = 3;
    private boolean hasLatitude;
    private int latitude_ = 0;
    public boolean hasLatitude() { return hasLatitude; }
    public int getLatitude() { return latitude_; }
    
    // required int32 longitude = 4;
    public static final int LONGITUDE_FIELD_NUMBER = 4;
    private boolean hasLongitude;
    private int longitude_ = 0;
    public boolean hasLongitude() { return hasLongitude; }
    public int getLongitude() { return longitude_; }
    
    // required int32 height = 5;
    public static final int HEIGHT_FIELD_NUMBER = 5;
    private boolean hasHeight;
    private int height_ = 0;
    public boolean hasHeight() { return hasHeight; }
    public int getHeight() { return height_; }
    
    // required uint32 speed = 6;
    public static final int SPEED_FIELD_NUMBER = 6;
    private boolean hasSpeed;
    private int speed_ = 0;
    public boolean hasSpeed() { return hasSpeed; }
    public int getSpeed() { return speed_; }
    
    // required uint32 heading = 7;
    public static final int HEADING_FIELD_NUMBER = 7;
    private boolean hasHeading;
    private int heading_ = 0;
    public boolean hasHeading() { return hasHeading; }
    public int getHeading() { return heading_; }
    
    // required uint32 year = 8;
    public static final int YEAR_FIELD_NUMBER = 8;
    private boolean hasYear;
    private int year_ = 0;
    public boolean hasYear() { return hasYear; }
    public int getYear() { return year_; }
    
    // required uint32 month = 9;
    public static final int MONTH_FIELD_NUMBER = 9;
    private boolean hasMonth;
    private int month_ = 0;
    public boolean hasMonth() { return hasMonth; }
    public int getMonth() { return month_; }
    
    // required uint32 day = 10;
    public static final int DAY_FIELD_NUMBER = 10;
    private boolean hasDay;
    private int day_ = 0;
    public boolean hasDay() { return hasDay; }
    public int getDay() { return day_; }
    
    // required uint32 hrs = 11;
    public static final int HRS_FIELD_NUMBER = 11;
    private boolean hasHrs;
    private int hrs_ = 0;
    public boolean hasHrs() { return hasHrs; }
    public int getHrs() { return hrs_; }
    
    // required uint32 min = 12;
    public static final int MIN_FIELD_NUMBER = 12;
    private boolean hasMin;
    private int min_ = 0;
    public boolean hasMin() { return hasMin; }
    public int getMin() { return min_; }
    
    // required uint32 sec = 13;
    public static final int SEC_FIELD_NUMBER = 13;
    private boolean hasSec;
    private int sec_ = 0;
    public boolean hasSec() { return hasSec; }
    public int getSec() { return sec_; }
    
    // required uint32 fix = 14;
    public static final int FIX_FIELD_NUMBER = 14;
    private boolean hasFix;
    private int fix_ = 0;
    public boolean hasFix() { return hasFix; }
    public int getFix() { return fix_; }
    
    // required uint32 hdop = 15;
    public static final int HDOP_FIELD_NUMBER = 15;
    private boolean hasHdop;
    private int hdop_ = 0;
    public boolean hasHdop() { return hasHdop; }
    public int getHdop() { return hdop_; }
    
    // required uint32 pdop = 16;
    public static final int PDOP_FIELD_NUMBER = 16;
    private boolean hasPdop;
    private int pdop_ = 0;
    public boolean hasPdop() { return hasPdop; }
    public int getPdop() { return pdop_; }
    
    // required uint32 vdop = 17;
    public static final int VDOP_FIELD_NUMBER = 17;
    private boolean hasVdop;
    private int vdop_ = 0;
    public boolean hasVdop() { return hasVdop; }
    public int getVdop() { return vdop_; }
    
    // required uint32 satsUsed = 18;
    public static final int SATSUSED_FIELD_NUMBER = 18;
    private boolean hasSatsUsed;
    private int satsUsed_ = 0;
    public boolean hasSatsUsed() { return hasSatsUsed; }
    public int getSatsUsed() { return satsUsed_; }
    
    // required uint32 satsVisible = 19;
    public static final int SATSVISIBLE_FIELD_NUMBER = 19;
    private boolean hasSatsVisible;
    private int satsVisible_ = 0;
    public boolean hasSatsVisible() { return hasSatsVisible; }
    public int getSatsVisible() { return satsVisible_; }
    
    // required uint32 horPosError = 20;
    public static final int HORPOSERROR_FIELD_NUMBER = 20;
    private boolean hasHorPosError;
    private int horPosError_ = 0;
    public boolean hasHorPosError() { return hasHorPosError; }
    public int getHorPosError() { return horPosError_; }
    
    // required uint32 vertPosError = 21;
    public static final int VERTPOSERROR_FIELD_NUMBER = 21;
    private boolean hasVertPosError;
    private int vertPosError_ = 0;
    public boolean hasVertPosError() { return hasVertPosError; }
    public int getVertPosError() { return vertPosError_; }
    
    // required int32 northSpeed = 22;
    public static final int NORTHSPEED_FIELD_NUMBER = 22;
    private boolean hasNorthSpeed;
    private int northSpeed_ = 0;
    public boolean hasNorthSpeed() { return hasNorthSpeed; }
    public int getNorthSpeed() { return northSpeed_; }
    
    // required int32 eastSpeed = 23;
    public static final int EASTSPEED_FIELD_NUMBER = 23;
    private boolean hasEastSpeed;
    private int eastSpeed_ = 0;
    public boolean hasEastSpeed() { return hasEastSpeed; }
    public int getEastSpeed() { return eastSpeed_; }
    
    // required int32 vertSpeed = 24;
    public static final int VERTSPEED_FIELD_NUMBER = 24;
    private boolean hasVertSpeed;
    private int vertSpeed_ = 0;
    public boolean hasVertSpeed() { return hasVertSpeed; }
    public int getVertSpeed() { return vertSpeed_; }
    
    // optional uint64 timeStamp = 25;
    public static final int TIMESTAMP_FIELD_NUMBER = 25;
    private boolean hasTimeStamp;
    private long timeStamp_ = 0L;
    public boolean hasTimeStamp() { return hasTimeStamp; }
    public long getTimeStamp() { return timeStamp_; }
    
    public final boolean isInitialized() {
      if (!hasAntennaState) return false;
      if (!hasSignalQuality) return false;
      if (!hasLatitude) return false;
      if (!hasLongitude) return false;
      if (!hasHeight) return false;
      if (!hasSpeed) return false;
      if (!hasHeading) return false;
      if (!hasYear) return false;
      if (!hasMonth) return false;
      if (!hasDay) return false;
      if (!hasHrs) return false;
      if (!hasMin) return false;
      if (!hasSec) return false;
      if (!hasFix) return false;
      if (!hasHdop) return false;
      if (!hasPdop) return false;
      if (!hasVdop) return false;
      if (!hasSatsUsed) return false;
      if (!hasSatsVisible) return false;
      if (!hasHorPosError) return false;
      if (!hasVertPosError) return false;
      if (!hasNorthSpeed) return false;
      if (!hasEastSpeed) return false;
      if (!hasVertSpeed) return false;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (hasAntennaState()) {
        output.writeUInt32(1, getAntennaState());
      }
      if (hasSignalQuality()) {
        output.writeUInt32(2, getSignalQuality());
      }
      if (hasLatitude()) {
        output.writeInt32(3, getLatitude());
      }
      if (hasLongitude()) {
        output.writeInt32(4, getLongitude());
      }
      if (hasHeight()) {
        output.writeInt32(5, getHeight());
      }
      if (hasSpeed()) {
        output.writeUInt32(6, getSpeed());
      }
      if (hasHeading()) {
        output.writeUInt32(7, getHeading());
      }
      if (hasYear()) {
        output.writeUInt32(8, getYear());
      }
      if (hasMonth()) {
        output.writeUInt32(9, getMonth());
      }
      if (hasDay()) {
        output.writeUInt32(10, getDay());
      }
      if (hasHrs()) {
        output.writeUInt32(11, getHrs());
      }
      if (hasMin()) {
        output.writeUInt32(12, getMin());
      }
      if (hasSec()) {
        output.writeUInt32(13, getSec());
      }
      if (hasFix()) {
        output.writeUInt32(14, getFix());
      }
      if (hasHdop()) {
        output.writeUInt32(15, getHdop());
      }
      if (hasPdop()) {
        output.writeUInt32(16, getPdop());
      }
      if (hasVdop()) {
        output.writeUInt32(17, getVdop());
      }
      if (hasSatsUsed()) {
        output.writeUInt32(18, getSatsUsed());
      }
      if (hasSatsVisible()) {
        output.writeUInt32(19, getSatsVisible());
      }
      if (hasHorPosError()) {
        output.writeUInt32(20, getHorPosError());
      }
      if (hasVertPosError()) {
        output.writeUInt32(21, getVertPosError());
      }
      if (hasNorthSpeed()) {
        output.writeInt32(22, getNorthSpeed());
      }
      if (hasEastSpeed()) {
        output.writeInt32(23, getEastSpeed());
      }
      if (hasVertSpeed()) {
        output.writeInt32(24, getVertSpeed());
      }
      if (hasTimeStamp()) {
        output.writeUInt64(25, getTimeStamp());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasAntennaState()) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, getAntennaState());
      }
      if (hasSignalQuality()) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, getSignalQuality());
      }
      if (hasLatitude()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, getLatitude());
      }
      if (hasLongitude()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, getLongitude());
      }
      if (hasHeight()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(5, getHeight());
      }
      if (hasSpeed()) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(6, getSpeed());
      }
      if (hasHeading()) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(7, getHeading());
      }
      if (hasYear()) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(8, getYear());
      }
      if (hasMonth()) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(9, getMonth());
      }
      if (hasDay()) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(10, getDay());
      }
      if (hasHrs()) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(11, getHrs());
      }
      if (hasMin()) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(12, getMin());
      }
      if (hasSec()) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(13, getSec());
      }
      if (hasFix()) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(14, getFix());
      }
      if (hasHdop()) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(15, getHdop());
      }
      if (hasPdop()) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(16, getPdop());
      }
      if (hasVdop()) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(17, getVdop());
      }
      if (hasSatsUsed()) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(18, getSatsUsed());
      }
      if (hasSatsVisible()) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(19, getSatsVisible());
      }
      if (hasHorPosError()) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(20, getHorPosError());
      }
      if (hasVertPosError()) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(21, getVertPosError());
      }
      if (hasNorthSpeed()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(22, getNorthSpeed());
      }
      if (hasEastSpeed()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(23, getEastSpeed());
      }
      if (hasVertSpeed()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(24, getVertSpeed());
      }
      if (hasTimeStamp()) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(25, getTimeStamp());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static com.baidu.carlife.protobuf.CarlifeCarGpsProto.CarlifeCarGps parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.baidu.carlife.protobuf.CarlifeCarGpsProto.CarlifeCarGps parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.baidu.carlife.protobuf.CarlifeCarGpsProto.CarlifeCarGps parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.baidu.carlife.protobuf.CarlifeCarGpsProto.CarlifeCarGps parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.baidu.carlife.protobuf.CarlifeCarGpsProto.CarlifeCarGps parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.baidu.carlife.protobuf.CarlifeCarGpsProto.CarlifeCarGps parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static com.baidu.carlife.protobuf.CarlifeCarGpsProto.CarlifeCarGps parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeDelimitedFrom(input).buildParsed();
    }
    public static com.baidu.carlife.protobuf.CarlifeCarGpsProto.CarlifeCarGps parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeDelimitedFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static com.baidu.carlife.protobuf.CarlifeCarGpsProto.CarlifeCarGps parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.baidu.carlife.protobuf.CarlifeCarGpsProto.CarlifeCarGps parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.baidu.carlife.protobuf.CarlifeCarGpsProto.CarlifeCarGps prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private com.baidu.carlife.protobuf.CarlifeCarGpsProto.CarlifeCarGps result;
      
      // Construct using com.baidu.carlife.protobuf.CarlifeCarGpsProto.CarlifeCarGps.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new com.baidu.carlife.protobuf.CarlifeCarGpsProto.CarlifeCarGps();
        return builder;
      }
      
      protected com.baidu.carlife.protobuf.CarlifeCarGpsProto.CarlifeCarGps internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new com.baidu.carlife.protobuf.CarlifeCarGpsProto.CarlifeCarGps();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.baidu.carlife.protobuf.CarlifeCarGpsProto.CarlifeCarGps.getDescriptor();
      }
      
      public com.baidu.carlife.protobuf.CarlifeCarGpsProto.CarlifeCarGps getDefaultInstanceForType() {
        return com.baidu.carlife.protobuf.CarlifeCarGpsProto.CarlifeCarGps.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public com.baidu.carlife.protobuf.CarlifeCarGpsProto.CarlifeCarGps build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private com.baidu.carlife.protobuf.CarlifeCarGpsProto.CarlifeCarGps buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public com.baidu.carlife.protobuf.CarlifeCarGpsProto.CarlifeCarGps buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        com.baidu.carlife.protobuf.CarlifeCarGpsProto.CarlifeCarGps returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.baidu.carlife.protobuf.CarlifeCarGpsProto.CarlifeCarGps) {
          return mergeFrom((com.baidu.carlife.protobuf.CarlifeCarGpsProto.CarlifeCarGps)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(com.baidu.carlife.protobuf.CarlifeCarGpsProto.CarlifeCarGps other) {
        if (other == com.baidu.carlife.protobuf.CarlifeCarGpsProto.CarlifeCarGps.getDefaultInstance()) return this;
        if (other.hasAntennaState()) {
          setAntennaState(other.getAntennaState());
        }
        if (other.hasSignalQuality()) {
          setSignalQuality(other.getSignalQuality());
        }
        if (other.hasLatitude()) {
          setLatitude(other.getLatitude());
        }
        if (other.hasLongitude()) {
          setLongitude(other.getLongitude());
        }
        if (other.hasHeight()) {
          setHeight(other.getHeight());
        }
        if (other.hasSpeed()) {
          setSpeed(other.getSpeed());
        }
        if (other.hasHeading()) {
          setHeading(other.getHeading());
        }
        if (other.hasYear()) {
          setYear(other.getYear());
        }
        if (other.hasMonth()) {
          setMonth(other.getMonth());
        }
        if (other.hasDay()) {
          setDay(other.getDay());
        }
        if (other.hasHrs()) {
          setHrs(other.getHrs());
        }
        if (other.hasMin()) {
          setMin(other.getMin());
        }
        if (other.hasSec()) {
          setSec(other.getSec());
        }
        if (other.hasFix()) {
          setFix(other.getFix());
        }
        if (other.hasHdop()) {
          setHdop(other.getHdop());
        }
        if (other.hasPdop()) {
          setPdop(other.getPdop());
        }
        if (other.hasVdop()) {
          setVdop(other.getVdop());
        }
        if (other.hasSatsUsed()) {
          setSatsUsed(other.getSatsUsed());
        }
        if (other.hasSatsVisible()) {
          setSatsVisible(other.getSatsVisible());
        }
        if (other.hasHorPosError()) {
          setHorPosError(other.getHorPosError());
        }
        if (other.hasVertPosError()) {
          setVertPosError(other.getVertPosError());
        }
        if (other.hasNorthSpeed()) {
          setNorthSpeed(other.getNorthSpeed());
        }
        if (other.hasEastSpeed()) {
          setEastSpeed(other.getEastSpeed());
        }
        if (other.hasVertSpeed()) {
          setVertSpeed(other.getVertSpeed());
        }
        if (other.hasTimeStamp()) {
          setTimeStamp(other.getTimeStamp());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 8: {
              setAntennaState(input.readUInt32());
              break;
            }
            case 16: {
              setSignalQuality(input.readUInt32());
              break;
            }
            case 24: {
              setLatitude(input.readInt32());
              break;
            }
            case 32: {
              setLongitude(input.readInt32());
              break;
            }
            case 40: {
              setHeight(input.readInt32());
              break;
            }
            case 48: {
              setSpeed(input.readUInt32());
              break;
            }
            case 56: {
              setHeading(input.readUInt32());
              break;
            }
            case 64: {
              setYear(input.readUInt32());
              break;
            }
            case 72: {
              setMonth(input.readUInt32());
              break;
            }
            case 80: {
              setDay(input.readUInt32());
              break;
            }
            case 88: {
              setHrs(input.readUInt32());
              break;
            }
            case 96: {
              setMin(input.readUInt32());
              break;
            }
            case 104: {
              setSec(input.readUInt32());
              break;
            }
            case 112: {
              setFix(input.readUInt32());
              break;
            }
            case 120: {
              setHdop(input.readUInt32());
              break;
            }
            case 128: {
              setPdop(input.readUInt32());
              break;
            }
            case 136: {
              setVdop(input.readUInt32());
              break;
            }
            case 144: {
              setSatsUsed(input.readUInt32());
              break;
            }
            case 152: {
              setSatsVisible(input.readUInt32());
              break;
            }
            case 160: {
              setHorPosError(input.readUInt32());
              break;
            }
            case 168: {
              setVertPosError(input.readUInt32());
              break;
            }
            case 176: {
              setNorthSpeed(input.readInt32());
              break;
            }
            case 184: {
              setEastSpeed(input.readInt32());
              break;
            }
            case 192: {
              setVertSpeed(input.readInt32());
              break;
            }
            case 200: {
              setTimeStamp(input.readUInt64());
              break;
            }
          }
        }
      }
      
      
      // required uint32 antennaState = 1;
      public boolean hasAntennaState() {
        return result.hasAntennaState();
      }
      public int getAntennaState() {
        return result.getAntennaState();
      }
      public Builder setAntennaState(int value) {
        result.hasAntennaState = true;
        result.antennaState_ = value;
        return this;
      }
      public Builder clearAntennaState() {
        result.hasAntennaState = false;
        result.antennaState_ = 0;
        return this;
      }
      
      // required uint32 signalQuality = 2;
      public boolean hasSignalQuality() {
        return result.hasSignalQuality();
      }
      public int getSignalQuality() {
        return result.getSignalQuality();
      }
      public Builder setSignalQuality(int value) {
        result.hasSignalQuality = true;
        result.signalQuality_ = value;
        return this;
      }
      public Builder clearSignalQuality() {
        result.hasSignalQuality = false;
        result.signalQuality_ = 0;
        return this;
      }
      
      // required int32 latitude = 3;
      public boolean hasLatitude() {
        return result.hasLatitude();
      }
      public int getLatitude() {
        return result.getLatitude();
      }
      public Builder setLatitude(int value) {
        result.hasLatitude = true;
        result.latitude_ = value;
        return this;
      }
      public Builder clearLatitude() {
        result.hasLatitude = false;
        result.latitude_ = 0;
        return this;
      }
      
      // required int32 longitude = 4;
      public boolean hasLongitude() {
        return result.hasLongitude();
      }
      public int getLongitude() {
        return result.getLongitude();
      }
      public Builder setLongitude(int value) {
        result.hasLongitude = true;
        result.longitude_ = value;
        return this;
      }
      public Builder clearLongitude() {
        result.hasLongitude = false;
        result.longitude_ = 0;
        return this;
      }
      
      // required int32 height = 5;
      public boolean hasHeight() {
        return result.hasHeight();
      }
      public int getHeight() {
        return result.getHeight();
      }
      public Builder setHeight(int value) {
        result.hasHeight = true;
        result.height_ = value;
        return this;
      }
      public Builder clearHeight() {
        result.hasHeight = false;
        result.height_ = 0;
        return this;
      }
      
      // required uint32 speed = 6;
      public boolean hasSpeed() {
        return result.hasSpeed();
      }
      public int getSpeed() {
        return result.getSpeed();
      }
      public Builder setSpeed(int value) {
        result.hasSpeed = true;
        result.speed_ = value;
        return this;
      }
      public Builder clearSpeed() {
        result.hasSpeed = false;
        result.speed_ = 0;
        return this;
      }
      
      // required uint32 heading = 7;
      public boolean hasHeading() {
        return result.hasHeading();
      }
      public int getHeading() {
        return result.getHeading();
      }
      public Builder setHeading(int value) {
        result.hasHeading = true;
        result.heading_ = value;
        return this;
      }
      public Builder clearHeading() {
        result.hasHeading = false;
        result.heading_ = 0;
        return this;
      }
      
      // required uint32 year = 8;
      public boolean hasYear() {
        return result.hasYear();
      }
      public int getYear() {
        return result.getYear();
      }
      public Builder setYear(int value) {
        result.hasYear = true;
        result.year_ = value;
        return this;
      }
      public Builder clearYear() {
        result.hasYear = false;
        result.year_ = 0;
        return this;
      }
      
      // required uint32 month = 9;
      public boolean hasMonth() {
        return result.hasMonth();
      }
      public int getMonth() {
        return result.getMonth();
      }
      public Builder setMonth(int value) {
        result.hasMonth = true;
        result.month_ = value;
        return this;
      }
      public Builder clearMonth() {
        result.hasMonth = false;
        result.month_ = 0;
        return this;
      }
      
      // required uint32 day = 10;
      public boolean hasDay() {
        return result.hasDay();
      }
      public int getDay() {
        return result.getDay();
      }
      public Builder setDay(int value) {
        result.hasDay = true;
        result.day_ = value;
        return this;
      }
      public Builder clearDay() {
        result.hasDay = false;
        result.day_ = 0;
        return this;
      }
      
      // required uint32 hrs = 11;
      public boolean hasHrs() {
        return result.hasHrs();
      }
      public int getHrs() {
        return result.getHrs();
      }
      public Builder setHrs(int value) {
        result.hasHrs = true;
        result.hrs_ = value;
        return this;
      }
      public Builder clearHrs() {
        result.hasHrs = false;
        result.hrs_ = 0;
        return this;
      }
      
      // required uint32 min = 12;
      public boolean hasMin() {
        return result.hasMin();
      }
      public int getMin() {
        return result.getMin();
      }
      public Builder setMin(int value) {
        result.hasMin = true;
        result.min_ = value;
        return this;
      }
      public Builder clearMin() {
        result.hasMin = false;
        result.min_ = 0;
        return this;
      }
      
      // required uint32 sec = 13;
      public boolean hasSec() {
        return result.hasSec();
      }
      public int getSec() {
        return result.getSec();
      }
      public Builder setSec(int value) {
        result.hasSec = true;
        result.sec_ = value;
        return this;
      }
      public Builder clearSec() {
        result.hasSec = false;
        result.sec_ = 0;
        return this;
      }
      
      // required uint32 fix = 14;
      public boolean hasFix() {
        return result.hasFix();
      }
      public int getFix() {
        return result.getFix();
      }
      public Builder setFix(int value) {
        result.hasFix = true;
        result.fix_ = value;
        return this;
      }
      public Builder clearFix() {
        result.hasFix = false;
        result.fix_ = 0;
        return this;
      }
      
      // required uint32 hdop = 15;
      public boolean hasHdop() {
        return result.hasHdop();
      }
      public int getHdop() {
        return result.getHdop();
      }
      public Builder setHdop(int value) {
        result.hasHdop = true;
        result.hdop_ = value;
        return this;
      }
      public Builder clearHdop() {
        result.hasHdop = false;
        result.hdop_ = 0;
        return this;
      }
      
      // required uint32 pdop = 16;
      public boolean hasPdop() {
        return result.hasPdop();
      }
      public int getPdop() {
        return result.getPdop();
      }
      public Builder setPdop(int value) {
        result.hasPdop = true;
        result.pdop_ = value;
        return this;
      }
      public Builder clearPdop() {
        result.hasPdop = false;
        result.pdop_ = 0;
        return this;
      }
      
      // required uint32 vdop = 17;
      public boolean hasVdop() {
        return result.hasVdop();
      }
      public int getVdop() {
        return result.getVdop();
      }
      public Builder setVdop(int value) {
        result.hasVdop = true;
        result.vdop_ = value;
        return this;
      }
      public Builder clearVdop() {
        result.hasVdop = false;
        result.vdop_ = 0;
        return this;
      }
      
      // required uint32 satsUsed = 18;
      public boolean hasSatsUsed() {
        return result.hasSatsUsed();
      }
      public int getSatsUsed() {
        return result.getSatsUsed();
      }
      public Builder setSatsUsed(int value) {
        result.hasSatsUsed = true;
        result.satsUsed_ = value;
        return this;
      }
      public Builder clearSatsUsed() {
        result.hasSatsUsed = false;
        result.satsUsed_ = 0;
        return this;
      }
      
      // required uint32 satsVisible = 19;
      public boolean hasSatsVisible() {
        return result.hasSatsVisible();
      }
      public int getSatsVisible() {
        return result.getSatsVisible();
      }
      public Builder setSatsVisible(int value) {
        result.hasSatsVisible = true;
        result.satsVisible_ = value;
        return this;
      }
      public Builder clearSatsVisible() {
        result.hasSatsVisible = false;
        result.satsVisible_ = 0;
        return this;
      }
      
      // required uint32 horPosError = 20;
      public boolean hasHorPosError() {
        return result.hasHorPosError();
      }
      public int getHorPosError() {
        return result.getHorPosError();
      }
      public Builder setHorPosError(int value) {
        result.hasHorPosError = true;
        result.horPosError_ = value;
        return this;
      }
      public Builder clearHorPosError() {
        result.hasHorPosError = false;
        result.horPosError_ = 0;
        return this;
      }
      
      // required uint32 vertPosError = 21;
      public boolean hasVertPosError() {
        return result.hasVertPosError();
      }
      public int getVertPosError() {
        return result.getVertPosError();
      }
      public Builder setVertPosError(int value) {
        result.hasVertPosError = true;
        result.vertPosError_ = value;
        return this;
      }
      public Builder clearVertPosError() {
        result.hasVertPosError = false;
        result.vertPosError_ = 0;
        return this;
      }
      
      // required int32 northSpeed = 22;
      public boolean hasNorthSpeed() {
        return result.hasNorthSpeed();
      }
      public int getNorthSpeed() {
        return result.getNorthSpeed();
      }
      public Builder setNorthSpeed(int value) {
        result.hasNorthSpeed = true;
        result.northSpeed_ = value;
        return this;
      }
      public Builder clearNorthSpeed() {
        result.hasNorthSpeed = false;
        result.northSpeed_ = 0;
        return this;
      }
      
      // required int32 eastSpeed = 23;
      public boolean hasEastSpeed() {
        return result.hasEastSpeed();
      }
      public int getEastSpeed() {
        return result.getEastSpeed();
      }
      public Builder setEastSpeed(int value) {
        result.hasEastSpeed = true;
        result.eastSpeed_ = value;
        return this;
      }
      public Builder clearEastSpeed() {
        result.hasEastSpeed = false;
        result.eastSpeed_ = 0;
        return this;
      }
      
      // required int32 vertSpeed = 24;
      public boolean hasVertSpeed() {
        return result.hasVertSpeed();
      }
      public int getVertSpeed() {
        return result.getVertSpeed();
      }
      public Builder setVertSpeed(int value) {
        result.hasVertSpeed = true;
        result.vertSpeed_ = value;
        return this;
      }
      public Builder clearVertSpeed() {
        result.hasVertSpeed = false;
        result.vertSpeed_ = 0;
        return this;
      }
      
      // optional uint64 timeStamp = 25;
      public boolean hasTimeStamp() {
        return result.hasTimeStamp();
      }
      public long getTimeStamp() {
        return result.getTimeStamp();
      }
      public Builder setTimeStamp(long value) {
        result.hasTimeStamp = true;
        result.timeStamp_ = value;
        return this;
      }
      public Builder clearTimeStamp() {
        result.hasTimeStamp = false;
        result.timeStamp_ = 0L;
        return this;
      }
    }
    
    static {
      com.baidu.carlife.protobuf.CarlifeCarGpsProto.getDescriptor();
    }
    
    static {
      com.baidu.carlife.protobuf.CarlifeCarGpsProto.internalForceInit();
    }
  }
  
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_baidu_carlife_protobuf_CarlifeCarGps_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_baidu_carlife_protobuf_CarlifeCarGps_fieldAccessorTable;
  
  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\030CarlifeCarGpsProto.proto\022\032com.baidu.ca" +
      "rlife.protobuf\"\270\003\n\rCarlifeCarGps\022\024\n\014ante" +
      "nnaState\030\001 \002(\r\022\025\n\rsignalQuality\030\002 \002(\r\022\020\n" +
      "\010latitude\030\003 \002(\005\022\021\n\tlongitude\030\004 \002(\005\022\016\n\006he" +
      "ight\030\005 \002(\005\022\r\n\005speed\030\006 \002(\r\022\017\n\007heading\030\007 \002" +
      "(\r\022\014\n\004year\030\010 \002(\r\022\r\n\005month\030\t \002(\r\022\013\n\003day\030\n" +
      " \002(\r\022\013\n\003hrs\030\013 \002(\r\022\013\n\003min\030\014 \002(\r\022\013\n\003sec\030\r " +
      "\002(\r\022\013\n\003fix\030\016 \002(\r\022\014\n\004hdop\030\017 \002(\r\022\014\n\004pdop\030\020" +
      " \002(\r\022\014\n\004vdop\030\021 \002(\r\022\020\n\010satsUsed\030\022 \002(\r\022\023\n\013" +
      "satsVisible\030\023 \002(\r\022\023\n\013horPosError\030\024 \002(\r\022\024",
      "\n\014vertPosError\030\025 \002(\r\022\022\n\nnorthSpeed\030\026 \002(\005" +
      "\022\021\n\teastSpeed\030\027 \002(\005\022\021\n\tvertSpeed\030\030 \002(\005\022\021" +
      "\n\ttimeStamp\030\031 \001(\004"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
      new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
        public com.google.protobuf.ExtensionRegistry assignDescriptors(
            com.google.protobuf.Descriptors.FileDescriptor root) {
          descriptor = root;
          internal_static_com_baidu_carlife_protobuf_CarlifeCarGps_descriptor =
            getDescriptor().getMessageTypes().get(0);
          internal_static_com_baidu_carlife_protobuf_CarlifeCarGps_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_baidu_carlife_protobuf_CarlifeCarGps_descriptor,
              new java.lang.String[] { "AntennaState", "SignalQuality", "Latitude", "Longitude", "Height", "Speed", "Heading", "Year", "Month", "Day", "Hrs", "Min", "Sec", "Fix", "Hdop", "Pdop", "Vdop", "SatsUsed", "SatsVisible", "HorPosError", "VertPosError", "NorthSpeed", "EastSpeed", "VertSpeed", "TimeStamp", },
              com.baidu.carlife.protobuf.CarlifeCarGpsProto.CarlifeCarGps.class,
              com.baidu.carlife.protobuf.CarlifeCarGpsProto.CarlifeCarGps.Builder.class);
          return null;
        }
      };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
  }
  
  public static void internalForceInit() {}
}
