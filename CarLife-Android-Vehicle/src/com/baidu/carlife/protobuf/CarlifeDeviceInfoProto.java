// Generated by the protocol buffer compiler.  DO NOT EDIT!

package com.baidu.carlife.protobuf;

public final class CarlifeDeviceInfoProto {
  private CarlifeDeviceInfoProto() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public static final class CarlifeDeviceInfo extends
      com.google.protobuf.GeneratedMessage {
    // Use CarlifeDeviceInfo.newBuilder() to construct.
    private CarlifeDeviceInfo() {}
    
    private static final CarlifeDeviceInfo defaultInstance = new CarlifeDeviceInfo();
    public static CarlifeDeviceInfo getDefaultInstance() {
      return defaultInstance;
    }
    
    public CarlifeDeviceInfo getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.baidu.carlife.protobuf.CarlifeDeviceInfoProto.internal_static_com_baidu_carlife_protobuf_CarlifeDeviceInfo_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.baidu.carlife.protobuf.CarlifeDeviceInfoProto.internal_static_com_baidu_carlife_protobuf_CarlifeDeviceInfo_fieldAccessorTable;
    }
    
    // optional string os = 1;
    public static final int OS_FIELD_NUMBER = 1;
    private boolean hasOs;
    private java.lang.String os_ = "";
    public boolean hasOs() { return hasOs; }
    public java.lang.String getOs() { return os_; }
    
    // optional string board = 2;
    public static final int BOARD_FIELD_NUMBER = 2;
    private boolean hasBoard;
    private java.lang.String board_ = "";
    public boolean hasBoard() { return hasBoard; }
    public java.lang.String getBoard() { return board_; }
    
    // optional string bootloader = 3;
    public static final int BOOTLOADER_FIELD_NUMBER = 3;
    private boolean hasBootloader;
    private java.lang.String bootloader_ = "";
    public boolean hasBootloader() { return hasBootloader; }
    public java.lang.String getBootloader() { return bootloader_; }
    
    // optional string brand = 4;
    public static final int BRAND_FIELD_NUMBER = 4;
    private boolean hasBrand;
    private java.lang.String brand_ = "";
    public boolean hasBrand() { return hasBrand; }
    public java.lang.String getBrand() { return brand_; }
    
    // optional string cpu_abi = 5;
    public static final int CPU_ABI_FIELD_NUMBER = 5;
    private boolean hasCpuAbi;
    private java.lang.String cpuAbi_ = "";
    public boolean hasCpuAbi() { return hasCpuAbi; }
    public java.lang.String getCpuAbi() { return cpuAbi_; }
    
    // optional string cpu_abi2 = 6;
    public static final int CPU_ABI2_FIELD_NUMBER = 6;
    private boolean hasCpuAbi2;
    private java.lang.String cpuAbi2_ = "";
    public boolean hasCpuAbi2() { return hasCpuAbi2; }
    public java.lang.String getCpuAbi2() { return cpuAbi2_; }
    
    // optional string device = 7;
    public static final int DEVICE_FIELD_NUMBER = 7;
    private boolean hasDevice;
    private java.lang.String device_ = "";
    public boolean hasDevice() { return hasDevice; }
    public java.lang.String getDevice() { return device_; }
    
    // optional string display = 8;
    public static final int DISPLAY_FIELD_NUMBER = 8;
    private boolean hasDisplay;
    private java.lang.String display_ = "";
    public boolean hasDisplay() { return hasDisplay; }
    public java.lang.String getDisplay() { return display_; }
    
    // optional string fingerprint = 9;
    public static final int FINGERPRINT_FIELD_NUMBER = 9;
    private boolean hasFingerprint;
    private java.lang.String fingerprint_ = "";
    public boolean hasFingerprint() { return hasFingerprint; }
    public java.lang.String getFingerprint() { return fingerprint_; }
    
    // optional string hardware = 10;
    public static final int HARDWARE_FIELD_NUMBER = 10;
    private boolean hasHardware;
    private java.lang.String hardware_ = "";
    public boolean hasHardware() { return hasHardware; }
    public java.lang.String getHardware() { return hardware_; }
    
    // optional string host = 11;
    public static final int HOST_FIELD_NUMBER = 11;
    private boolean hasHost;
    private java.lang.String host_ = "";
    public boolean hasHost() { return hasHost; }
    public java.lang.String getHost() { return host_; }
    
    // optional string cid = 12;
    public static final int CID_FIELD_NUMBER = 12;
    private boolean hasCid;
    private java.lang.String cid_ = "";
    public boolean hasCid() { return hasCid; }
    public java.lang.String getCid() { return cid_; }
    
    // optional string manufacturer = 13;
    public static final int MANUFACTURER_FIELD_NUMBER = 13;
    private boolean hasManufacturer;
    private java.lang.String manufacturer_ = "";
    public boolean hasManufacturer() { return hasManufacturer; }
    public java.lang.String getManufacturer() { return manufacturer_; }
    
    // optional string model = 14;
    public static final int MODEL_FIELD_NUMBER = 14;
    private boolean hasModel;
    private java.lang.String model_ = "";
    public boolean hasModel() { return hasModel; }
    public java.lang.String getModel() { return model_; }
    
    // optional string product = 15;
    public static final int PRODUCT_FIELD_NUMBER = 15;
    private boolean hasProduct;
    private java.lang.String product_ = "";
    public boolean hasProduct() { return hasProduct; }
    public java.lang.String getProduct() { return product_; }
    
    // optional string serial = 16;
    public static final int SERIAL_FIELD_NUMBER = 16;
    private boolean hasSerial;
    private java.lang.String serial_ = "";
    public boolean hasSerial() { return hasSerial; }
    public java.lang.String getSerial() { return serial_; }
    
    // optional string codename = 17;
    public static final int CODENAME_FIELD_NUMBER = 17;
    private boolean hasCodename;
    private java.lang.String codename_ = "";
    public boolean hasCodename() { return hasCodename; }
    public java.lang.String getCodename() { return codename_; }
    
    // optional string incremental = 18;
    public static final int INCREMENTAL_FIELD_NUMBER = 18;
    private boolean hasIncremental;
    private java.lang.String incremental_ = "";
    public boolean hasIncremental() { return hasIncremental; }
    public java.lang.String getIncremental() { return incremental_; }
    
    // optional string release = 19;
    public static final int RELEASE_FIELD_NUMBER = 19;
    private boolean hasRelease;
    private java.lang.String release_ = "";
    public boolean hasRelease() { return hasRelease; }
    public java.lang.String getRelease() { return release_; }
    
    // optional string sdk = 20;
    public static final int SDK_FIELD_NUMBER = 20;
    private boolean hasSdk;
    private java.lang.String sdk_ = "";
    public boolean hasSdk() { return hasSdk; }
    public java.lang.String getSdk() { return sdk_; }
    
    // optional int32 sdk_int = 21;
    public static final int SDK_INT_FIELD_NUMBER = 21;
    private boolean hasSdkInt;
    private int sdkInt_ = 0;
    public boolean hasSdkInt() { return hasSdkInt; }
    public int getSdkInt() { return sdkInt_; }
    
    // optional string token = 22;
    public static final int TOKEN_FIELD_NUMBER = 22;
    private boolean hasToken;
    private java.lang.String token_ = "";
    public boolean hasToken() { return hasToken; }
    public java.lang.String getToken() { return token_; }
    
    // optional string btaddress = 23;
    public static final int BTADDRESS_FIELD_NUMBER = 23;
    private boolean hasBtaddress;
    private java.lang.String btaddress_ = "";
    public boolean hasBtaddress() { return hasBtaddress; }
    public java.lang.String getBtaddress() { return btaddress_; }
    
    public final boolean isInitialized() {
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (hasOs()) {
        output.writeString(1, getOs());
      }
      if (hasBoard()) {
        output.writeString(2, getBoard());
      }
      if (hasBootloader()) {
        output.writeString(3, getBootloader());
      }
      if (hasBrand()) {
        output.writeString(4, getBrand());
      }
      if (hasCpuAbi()) {
        output.writeString(5, getCpuAbi());
      }
      if (hasCpuAbi2()) {
        output.writeString(6, getCpuAbi2());
      }
      if (hasDevice()) {
        output.writeString(7, getDevice());
      }
      if (hasDisplay()) {
        output.writeString(8, getDisplay());
      }
      if (hasFingerprint()) {
        output.writeString(9, getFingerprint());
      }
      if (hasHardware()) {
        output.writeString(10, getHardware());
      }
      if (hasHost()) {
        output.writeString(11, getHost());
      }
      if (hasCid()) {
        output.writeString(12, getCid());
      }
      if (hasManufacturer()) {
        output.writeString(13, getManufacturer());
      }
      if (hasModel()) {
        output.writeString(14, getModel());
      }
      if (hasProduct()) {
        output.writeString(15, getProduct());
      }
      if (hasSerial()) {
        output.writeString(16, getSerial());
      }
      if (hasCodename()) {
        output.writeString(17, getCodename());
      }
      if (hasIncremental()) {
        output.writeString(18, getIncremental());
      }
      if (hasRelease()) {
        output.writeString(19, getRelease());
      }
      if (hasSdk()) {
        output.writeString(20, getSdk());
      }
      if (hasSdkInt()) {
        output.writeInt32(21, getSdkInt());
      }
      if (hasToken()) {
        output.writeString(22, getToken());
      }
      if (hasBtaddress()) {
        output.writeString(23, getBtaddress());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasOs()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(1, getOs());
      }
      if (hasBoard()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(2, getBoard());
      }
      if (hasBootloader()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(3, getBootloader());
      }
      if (hasBrand()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(4, getBrand());
      }
      if (hasCpuAbi()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(5, getCpuAbi());
      }
      if (hasCpuAbi2()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(6, getCpuAbi2());
      }
      if (hasDevice()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(7, getDevice());
      }
      if (hasDisplay()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(8, getDisplay());
      }
      if (hasFingerprint()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(9, getFingerprint());
      }
      if (hasHardware()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(10, getHardware());
      }
      if (hasHost()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(11, getHost());
      }
      if (hasCid()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(12, getCid());
      }
      if (hasManufacturer()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(13, getManufacturer());
      }
      if (hasModel()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(14, getModel());
      }
      if (hasProduct()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(15, getProduct());
      }
      if (hasSerial()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(16, getSerial());
      }
      if (hasCodename()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(17, getCodename());
      }
      if (hasIncremental()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(18, getIncremental());
      }
      if (hasRelease()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(19, getRelease());
      }
      if (hasSdk()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(20, getSdk());
      }
      if (hasSdkInt()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(21, getSdkInt());
      }
      if (hasToken()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(22, getToken());
      }
      if (hasBtaddress()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(23, getBtaddress());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static com.baidu.carlife.protobuf.CarlifeDeviceInfoProto.CarlifeDeviceInfo parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.baidu.carlife.protobuf.CarlifeDeviceInfoProto.CarlifeDeviceInfo parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.baidu.carlife.protobuf.CarlifeDeviceInfoProto.CarlifeDeviceInfo parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.baidu.carlife.protobuf.CarlifeDeviceInfoProto.CarlifeDeviceInfo parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.baidu.carlife.protobuf.CarlifeDeviceInfoProto.CarlifeDeviceInfo parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.baidu.carlife.protobuf.CarlifeDeviceInfoProto.CarlifeDeviceInfo parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static com.baidu.carlife.protobuf.CarlifeDeviceInfoProto.CarlifeDeviceInfo parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeDelimitedFrom(input).buildParsed();
    }
    public static com.baidu.carlife.protobuf.CarlifeDeviceInfoProto.CarlifeDeviceInfo parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeDelimitedFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static com.baidu.carlife.protobuf.CarlifeDeviceInfoProto.CarlifeDeviceInfo parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.baidu.carlife.protobuf.CarlifeDeviceInfoProto.CarlifeDeviceInfo parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.baidu.carlife.protobuf.CarlifeDeviceInfoProto.CarlifeDeviceInfo prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private com.baidu.carlife.protobuf.CarlifeDeviceInfoProto.CarlifeDeviceInfo result;
      
      // Construct using com.baidu.carlife.protobuf.CarlifeDeviceInfoProto.CarlifeDeviceInfo.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new com.baidu.carlife.protobuf.CarlifeDeviceInfoProto.CarlifeDeviceInfo();
        return builder;
      }
      
      protected com.baidu.carlife.protobuf.CarlifeDeviceInfoProto.CarlifeDeviceInfo internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new com.baidu.carlife.protobuf.CarlifeDeviceInfoProto.CarlifeDeviceInfo();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.baidu.carlife.protobuf.CarlifeDeviceInfoProto.CarlifeDeviceInfo.getDescriptor();
      }
      
      public com.baidu.carlife.protobuf.CarlifeDeviceInfoProto.CarlifeDeviceInfo getDefaultInstanceForType() {
        return com.baidu.carlife.protobuf.CarlifeDeviceInfoProto.CarlifeDeviceInfo.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public com.baidu.carlife.protobuf.CarlifeDeviceInfoProto.CarlifeDeviceInfo build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private com.baidu.carlife.protobuf.CarlifeDeviceInfoProto.CarlifeDeviceInfo buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public com.baidu.carlife.protobuf.CarlifeDeviceInfoProto.CarlifeDeviceInfo buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        com.baidu.carlife.protobuf.CarlifeDeviceInfoProto.CarlifeDeviceInfo returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.baidu.carlife.protobuf.CarlifeDeviceInfoProto.CarlifeDeviceInfo) {
          return mergeFrom((com.baidu.carlife.protobuf.CarlifeDeviceInfoProto.CarlifeDeviceInfo)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(com.baidu.carlife.protobuf.CarlifeDeviceInfoProto.CarlifeDeviceInfo other) {
        if (other == com.baidu.carlife.protobuf.CarlifeDeviceInfoProto.CarlifeDeviceInfo.getDefaultInstance()) return this;
        if (other.hasOs()) {
          setOs(other.getOs());
        }
        if (other.hasBoard()) {
          setBoard(other.getBoard());
        }
        if (other.hasBootloader()) {
          setBootloader(other.getBootloader());
        }
        if (other.hasBrand()) {
          setBrand(other.getBrand());
        }
        if (other.hasCpuAbi()) {
          setCpuAbi(other.getCpuAbi());
        }
        if (other.hasCpuAbi2()) {
          setCpuAbi2(other.getCpuAbi2());
        }
        if (other.hasDevice()) {
          setDevice(other.getDevice());
        }
        if (other.hasDisplay()) {
          setDisplay(other.getDisplay());
        }
        if (other.hasFingerprint()) {
          setFingerprint(other.getFingerprint());
        }
        if (other.hasHardware()) {
          setHardware(other.getHardware());
        }
        if (other.hasHost()) {
          setHost(other.getHost());
        }
        if (other.hasCid()) {
          setCid(other.getCid());
        }
        if (other.hasManufacturer()) {
          setManufacturer(other.getManufacturer());
        }
        if (other.hasModel()) {
          setModel(other.getModel());
        }
        if (other.hasProduct()) {
          setProduct(other.getProduct());
        }
        if (other.hasSerial()) {
          setSerial(other.getSerial());
        }
        if (other.hasCodename()) {
          setCodename(other.getCodename());
        }
        if (other.hasIncremental()) {
          setIncremental(other.getIncremental());
        }
        if (other.hasRelease()) {
          setRelease(other.getRelease());
        }
        if (other.hasSdk()) {
          setSdk(other.getSdk());
        }
        if (other.hasSdkInt()) {
          setSdkInt(other.getSdkInt());
        }
        if (other.hasToken()) {
          setToken(other.getToken());
        }
        if (other.hasBtaddress()) {
          setBtaddress(other.getBtaddress());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 10: {
              setOs(input.readString());
              break;
            }
            case 18: {
              setBoard(input.readString());
              break;
            }
            case 26: {
              setBootloader(input.readString());
              break;
            }
            case 34: {
              setBrand(input.readString());
              break;
            }
            case 42: {
              setCpuAbi(input.readString());
              break;
            }
            case 50: {
              setCpuAbi2(input.readString());
              break;
            }
            case 58: {
              setDevice(input.readString());
              break;
            }
            case 66: {
              setDisplay(input.readString());
              break;
            }
            case 74: {
              setFingerprint(input.readString());
              break;
            }
            case 82: {
              setHardware(input.readString());
              break;
            }
            case 90: {
              setHost(input.readString());
              break;
            }
            case 98: {
              setCid(input.readString());
              break;
            }
            case 106: {
              setManufacturer(input.readString());
              break;
            }
            case 114: {
              setModel(input.readString());
              break;
            }
            case 122: {
              setProduct(input.readString());
              break;
            }
            case 130: {
              setSerial(input.readString());
              break;
            }
            case 138: {
              setCodename(input.readString());
              break;
            }
            case 146: {
              setIncremental(input.readString());
              break;
            }
            case 154: {
              setRelease(input.readString());
              break;
            }
            case 162: {
              setSdk(input.readString());
              break;
            }
            case 168: {
              setSdkInt(input.readInt32());
              break;
            }
            case 178: {
              setToken(input.readString());
              break;
            }
            case 186: {
              setBtaddress(input.readString());
              break;
            }
          }
        }
      }
      
      
      // optional string os = 1;
      public boolean hasOs() {
        return result.hasOs();
      }
      public java.lang.String getOs() {
        return result.getOs();
      }
      public Builder setOs(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasOs = true;
        result.os_ = value;
        return this;
      }
      public Builder clearOs() {
        result.hasOs = false;
        result.os_ = getDefaultInstance().getOs();
        return this;
      }
      
      // optional string board = 2;
      public boolean hasBoard() {
        return result.hasBoard();
      }
      public java.lang.String getBoard() {
        return result.getBoard();
      }
      public Builder setBoard(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasBoard = true;
        result.board_ = value;
        return this;
      }
      public Builder clearBoard() {
        result.hasBoard = false;
        result.board_ = getDefaultInstance().getBoard();
        return this;
      }
      
      // optional string bootloader = 3;
      public boolean hasBootloader() {
        return result.hasBootloader();
      }
      public java.lang.String getBootloader() {
        return result.getBootloader();
      }
      public Builder setBootloader(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasBootloader = true;
        result.bootloader_ = value;
        return this;
      }
      public Builder clearBootloader() {
        result.hasBootloader = false;
        result.bootloader_ = getDefaultInstance().getBootloader();
        return this;
      }
      
      // optional string brand = 4;
      public boolean hasBrand() {
        return result.hasBrand();
      }
      public java.lang.String getBrand() {
        return result.getBrand();
      }
      public Builder setBrand(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasBrand = true;
        result.brand_ = value;
        return this;
      }
      public Builder clearBrand() {
        result.hasBrand = false;
        result.brand_ = getDefaultInstance().getBrand();
        return this;
      }
      
      // optional string cpu_abi = 5;
      public boolean hasCpuAbi() {
        return result.hasCpuAbi();
      }
      public java.lang.String getCpuAbi() {
        return result.getCpuAbi();
      }
      public Builder setCpuAbi(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasCpuAbi = true;
        result.cpuAbi_ = value;
        return this;
      }
      public Builder clearCpuAbi() {
        result.hasCpuAbi = false;
        result.cpuAbi_ = getDefaultInstance().getCpuAbi();
        return this;
      }
      
      // optional string cpu_abi2 = 6;
      public boolean hasCpuAbi2() {
        return result.hasCpuAbi2();
      }
      public java.lang.String getCpuAbi2() {
        return result.getCpuAbi2();
      }
      public Builder setCpuAbi2(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasCpuAbi2 = true;
        result.cpuAbi2_ = value;
        return this;
      }
      public Builder clearCpuAbi2() {
        result.hasCpuAbi2 = false;
        result.cpuAbi2_ = getDefaultInstance().getCpuAbi2();
        return this;
      }
      
      // optional string device = 7;
      public boolean hasDevice() {
        return result.hasDevice();
      }
      public java.lang.String getDevice() {
        return result.getDevice();
      }
      public Builder setDevice(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasDevice = true;
        result.device_ = value;
        return this;
      }
      public Builder clearDevice() {
        result.hasDevice = false;
        result.device_ = getDefaultInstance().getDevice();
        return this;
      }
      
      // optional string display = 8;
      public boolean hasDisplay() {
        return result.hasDisplay();
      }
      public java.lang.String getDisplay() {
        return result.getDisplay();
      }
      public Builder setDisplay(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasDisplay = true;
        result.display_ = value;
        return this;
      }
      public Builder clearDisplay() {
        result.hasDisplay = false;
        result.display_ = getDefaultInstance().getDisplay();
        return this;
      }
      
      // optional string fingerprint = 9;
      public boolean hasFingerprint() {
        return result.hasFingerprint();
      }
      public java.lang.String getFingerprint() {
        return result.getFingerprint();
      }
      public Builder setFingerprint(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasFingerprint = true;
        result.fingerprint_ = value;
        return this;
      }
      public Builder clearFingerprint() {
        result.hasFingerprint = false;
        result.fingerprint_ = getDefaultInstance().getFingerprint();
        return this;
      }
      
      // optional string hardware = 10;
      public boolean hasHardware() {
        return result.hasHardware();
      }
      public java.lang.String getHardware() {
        return result.getHardware();
      }
      public Builder setHardware(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasHardware = true;
        result.hardware_ = value;
        return this;
      }
      public Builder clearHardware() {
        result.hasHardware = false;
        result.hardware_ = getDefaultInstance().getHardware();
        return this;
      }
      
      // optional string host = 11;
      public boolean hasHost() {
        return result.hasHost();
      }
      public java.lang.String getHost() {
        return result.getHost();
      }
      public Builder setHost(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasHost = true;
        result.host_ = value;
        return this;
      }
      public Builder clearHost() {
        result.hasHost = false;
        result.host_ = getDefaultInstance().getHost();
        return this;
      }
      
      // optional string cid = 12;
      public boolean hasCid() {
        return result.hasCid();
      }
      public java.lang.String getCid() {
        return result.getCid();
      }
      public Builder setCid(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasCid = true;
        result.cid_ = value;
        return this;
      }
      public Builder clearCid() {
        result.hasCid = false;
        result.cid_ = getDefaultInstance().getCid();
        return this;
      }
      
      // optional string manufacturer = 13;
      public boolean hasManufacturer() {
        return result.hasManufacturer();
      }
      public java.lang.String getManufacturer() {
        return result.getManufacturer();
      }
      public Builder setManufacturer(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasManufacturer = true;
        result.manufacturer_ = value;
        return this;
      }
      public Builder clearManufacturer() {
        result.hasManufacturer = false;
        result.manufacturer_ = getDefaultInstance().getManufacturer();
        return this;
      }
      
      // optional string model = 14;
      public boolean hasModel() {
        return result.hasModel();
      }
      public java.lang.String getModel() {
        return result.getModel();
      }
      public Builder setModel(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasModel = true;
        result.model_ = value;
        return this;
      }
      public Builder clearModel() {
        result.hasModel = false;
        result.model_ = getDefaultInstance().getModel();
        return this;
      }
      
      // optional string product = 15;
      public boolean hasProduct() {
        return result.hasProduct();
      }
      public java.lang.String getProduct() {
        return result.getProduct();
      }
      public Builder setProduct(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasProduct = true;
        result.product_ = value;
        return this;
      }
      public Builder clearProduct() {
        result.hasProduct = false;
        result.product_ = getDefaultInstance().getProduct();
        return this;
      }
      
      // optional string serial = 16;
      public boolean hasSerial() {
        return result.hasSerial();
      }
      public java.lang.String getSerial() {
        return result.getSerial();
      }
      public Builder setSerial(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasSerial = true;
        result.serial_ = value;
        return this;
      }
      public Builder clearSerial() {
        result.hasSerial = false;
        result.serial_ = getDefaultInstance().getSerial();
        return this;
      }
      
      // optional string codename = 17;
      public boolean hasCodename() {
        return result.hasCodename();
      }
      public java.lang.String getCodename() {
        return result.getCodename();
      }
      public Builder setCodename(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasCodename = true;
        result.codename_ = value;
        return this;
      }
      public Builder clearCodename() {
        result.hasCodename = false;
        result.codename_ = getDefaultInstance().getCodename();
        return this;
      }
      
      // optional string incremental = 18;
      public boolean hasIncremental() {
        return result.hasIncremental();
      }
      public java.lang.String getIncremental() {
        return result.getIncremental();
      }
      public Builder setIncremental(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasIncremental = true;
        result.incremental_ = value;
        return this;
      }
      public Builder clearIncremental() {
        result.hasIncremental = false;
        result.incremental_ = getDefaultInstance().getIncremental();
        return this;
      }
      
      // optional string release = 19;
      public boolean hasRelease() {
        return result.hasRelease();
      }
      public java.lang.String getRelease() {
        return result.getRelease();
      }
      public Builder setRelease(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasRelease = true;
        result.release_ = value;
        return this;
      }
      public Builder clearRelease() {
        result.hasRelease = false;
        result.release_ = getDefaultInstance().getRelease();
        return this;
      }
      
      // optional string sdk = 20;
      public boolean hasSdk() {
        return result.hasSdk();
      }
      public java.lang.String getSdk() {
        return result.getSdk();
      }
      public Builder setSdk(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasSdk = true;
        result.sdk_ = value;
        return this;
      }
      public Builder clearSdk() {
        result.hasSdk = false;
        result.sdk_ = getDefaultInstance().getSdk();
        return this;
      }
      
      // optional int32 sdk_int = 21;
      public boolean hasSdkInt() {
        return result.hasSdkInt();
      }
      public int getSdkInt() {
        return result.getSdkInt();
      }
      public Builder setSdkInt(int value) {
        result.hasSdkInt = true;
        result.sdkInt_ = value;
        return this;
      }
      public Builder clearSdkInt() {
        result.hasSdkInt = false;
        result.sdkInt_ = 0;
        return this;
      }
      
      // optional string token = 22;
      public boolean hasToken() {
        return result.hasToken();
      }
      public java.lang.String getToken() {
        return result.getToken();
      }
      public Builder setToken(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasToken = true;
        result.token_ = value;
        return this;
      }
      public Builder clearToken() {
        result.hasToken = false;
        result.token_ = getDefaultInstance().getToken();
        return this;
      }
      
      // optional string btaddress = 23;
      public boolean hasBtaddress() {
        return result.hasBtaddress();
      }
      public java.lang.String getBtaddress() {
        return result.getBtaddress();
      }
      public Builder setBtaddress(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasBtaddress = true;
        result.btaddress_ = value;
        return this;
      }
      public Builder clearBtaddress() {
        result.hasBtaddress = false;
        result.btaddress_ = getDefaultInstance().getBtaddress();
        return this;
      }
    }
    
    static {
      com.baidu.carlife.protobuf.CarlifeDeviceInfoProto.getDescriptor();
    }
    
    static {
      com.baidu.carlife.protobuf.CarlifeDeviceInfoProto.internalForceInit();
    }
  }
  
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_baidu_carlife_protobuf_CarlifeDeviceInfo_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_baidu_carlife_protobuf_CarlifeDeviceInfo_fieldAccessorTable;
  
  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\034CarlifeDeviceInfoProto.proto\022\032com.baid" +
      "u.carlife.protobuf\"\225\003\n\021CarlifeDeviceInfo" +
      "\022\n\n\002os\030\001 \001(\t\022\r\n\005board\030\002 \001(\t\022\022\n\nbootloade" +
      "r\030\003 \001(\t\022\r\n\005brand\030\004 \001(\t\022\017\n\007cpu_abi\030\005 \001(\t\022" +
      "\020\n\010cpu_abi2\030\006 \001(\t\022\016\n\006device\030\007 \001(\t\022\017\n\007dis" +
      "play\030\010 \001(\t\022\023\n\013fingerprint\030\t \001(\t\022\020\n\010hardw" +
      "are\030\n \001(\t\022\014\n\004host\030\013 \001(\t\022\013\n\003cid\030\014 \001(\t\022\024\n\014" +
      "manufacturer\030\r \001(\t\022\r\n\005model\030\016 \001(\t\022\017\n\007pro" +
      "duct\030\017 \001(\t\022\016\n\006serial\030\020 \001(\t\022\020\n\010codename\030\021" +
      " \001(\t\022\023\n\013incremental\030\022 \001(\t\022\017\n\007release\030\023 \001",
      "(\t\022\013\n\003sdk\030\024 \001(\t\022\017\n\007sdk_int\030\025 \001(\005\022\r\n\005toke" +
      "n\030\026 \001(\t\022\021\n\tbtaddress\030\027 \001(\t"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
      new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
        public com.google.protobuf.ExtensionRegistry assignDescriptors(
            com.google.protobuf.Descriptors.FileDescriptor root) {
          descriptor = root;
          internal_static_com_baidu_carlife_protobuf_CarlifeDeviceInfo_descriptor =
            getDescriptor().getMessageTypes().get(0);
          internal_static_com_baidu_carlife_protobuf_CarlifeDeviceInfo_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_baidu_carlife_protobuf_CarlifeDeviceInfo_descriptor,
              new java.lang.String[] { "Os", "Board", "Bootloader", "Brand", "CpuAbi", "CpuAbi2", "Device", "Display", "Fingerprint", "Hardware", "Host", "Cid", "Manufacturer", "Model", "Product", "Serial", "Codename", "Incremental", "Release", "Sdk", "SdkInt", "Token", "Btaddress", },
              com.baidu.carlife.protobuf.CarlifeDeviceInfoProto.CarlifeDeviceInfo.class,
              com.baidu.carlife.protobuf.CarlifeDeviceInfoProto.CarlifeDeviceInfo.Builder.class);
          return null;
        }
      };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
  }
  
  public static void internalForceInit() {}
}
