// Generated by the protocol buffer compiler.  DO NOT EDIT!

package com.baidu.carlife.protobuf;

public final class CarlifeMediaInfoProto {
  private CarlifeMediaInfoProto() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public static final class CarlifeMediaInfo extends
      com.google.protobuf.GeneratedMessage {
    // Use CarlifeMediaInfo.newBuilder() to construct.
    private CarlifeMediaInfo() {}
    
    private static final CarlifeMediaInfo defaultInstance = new CarlifeMediaInfo();
    public static CarlifeMediaInfo getDefaultInstance() {
      return defaultInstance;
    }
    
    public CarlifeMediaInfo getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.baidu.carlife.protobuf.CarlifeMediaInfoProto.internal_static_com_baidu_carlife_protobuf_CarlifeMediaInfo_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.baidu.carlife.protobuf.CarlifeMediaInfoProto.internal_static_com_baidu_carlife_protobuf_CarlifeMediaInfo_fieldAccessorTable;
    }
    
    // required string source = 1;
    public static final int SOURCE_FIELD_NUMBER = 1;
    private boolean hasSource;
    private java.lang.String source_ = "";
    public boolean hasSource() { return hasSource; }
    public java.lang.String getSource() { return source_; }
    
    // required string song = 2;
    public static final int SONG_FIELD_NUMBER = 2;
    private boolean hasSong;
    private java.lang.String song_ = "";
    public boolean hasSong() { return hasSong; }
    public java.lang.String getSong() { return song_; }
    
    // required string artist = 3;
    public static final int ARTIST_FIELD_NUMBER = 3;
    private boolean hasArtist;
    private java.lang.String artist_ = "";
    public boolean hasArtist() { return hasArtist; }
    public java.lang.String getArtist() { return artist_; }
    
    // required string album = 4;
    public static final int ALBUM_FIELD_NUMBER = 4;
    private boolean hasAlbum;
    private java.lang.String album_ = "";
    public boolean hasAlbum() { return hasAlbum; }
    public java.lang.String getAlbum() { return album_; }
    
    // required bytes albumArt = 5;
    public static final int ALBUMART_FIELD_NUMBER = 5;
    private boolean hasAlbumArt;
    private com.google.protobuf.ByteString albumArt_ = com.google.protobuf.ByteString.EMPTY;
    public boolean hasAlbumArt() { return hasAlbumArt; }
    public com.google.protobuf.ByteString getAlbumArt() { return albumArt_; }
    
    // required int32 duration = 6;
    public static final int DURATION_FIELD_NUMBER = 6;
    private boolean hasDuration;
    private int duration_ = 0;
    public boolean hasDuration() { return hasDuration; }
    public int getDuration() { return duration_; }
    
    // required int32 playlistNum = 7;
    public static final int PLAYLISTNUM_FIELD_NUMBER = 7;
    private boolean hasPlaylistNum;
    private int playlistNum_ = 0;
    public boolean hasPlaylistNum() { return hasPlaylistNum; }
    public int getPlaylistNum() { return playlistNum_; }
    
    // required string songId = 8;
    public static final int SONGID_FIELD_NUMBER = 8;
    private boolean hasSongId;
    private java.lang.String songId_ = "";
    public boolean hasSongId() { return hasSongId; }
    public java.lang.String getSongId() { return songId_; }
    
    // required int32 mode = 9;
    public static final int MODE_FIELD_NUMBER = 9;
    private boolean hasMode;
    private int mode_ = 0;
    public boolean hasMode() { return hasMode; }
    public int getMode() { return mode_; }
    
    public final boolean isInitialized() {
      if (!hasSource) return false;
      if (!hasSong) return false;
      if (!hasArtist) return false;
      if (!hasAlbum) return false;
      if (!hasAlbumArt) return false;
      if (!hasDuration) return false;
      if (!hasPlaylistNum) return false;
      if (!hasSongId) return false;
      if (!hasMode) return false;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (hasSource()) {
        output.writeString(1, getSource());
      }
      if (hasSong()) {
        output.writeString(2, getSong());
      }
      if (hasArtist()) {
        output.writeString(3, getArtist());
      }
      if (hasAlbum()) {
        output.writeString(4, getAlbum());
      }
      if (hasAlbumArt()) {
        output.writeBytes(5, getAlbumArt());
      }
      if (hasDuration()) {
        output.writeInt32(6, getDuration());
      }
      if (hasPlaylistNum()) {
        output.writeInt32(7, getPlaylistNum());
      }
      if (hasSongId()) {
        output.writeString(8, getSongId());
      }
      if (hasMode()) {
        output.writeInt32(9, getMode());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasSource()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(1, getSource());
      }
      if (hasSong()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(2, getSong());
      }
      if (hasArtist()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(3, getArtist());
      }
      if (hasAlbum()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(4, getAlbum());
      }
      if (hasAlbumArt()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(5, getAlbumArt());
      }
      if (hasDuration()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(6, getDuration());
      }
      if (hasPlaylistNum()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(7, getPlaylistNum());
      }
      if (hasSongId()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(8, getSongId());
      }
      if (hasMode()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(9, getMode());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static com.baidu.carlife.protobuf.CarlifeMediaInfoProto.CarlifeMediaInfo parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.baidu.carlife.protobuf.CarlifeMediaInfoProto.CarlifeMediaInfo parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.baidu.carlife.protobuf.CarlifeMediaInfoProto.CarlifeMediaInfo parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.baidu.carlife.protobuf.CarlifeMediaInfoProto.CarlifeMediaInfo parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.baidu.carlife.protobuf.CarlifeMediaInfoProto.CarlifeMediaInfo parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.baidu.carlife.protobuf.CarlifeMediaInfoProto.CarlifeMediaInfo parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static com.baidu.carlife.protobuf.CarlifeMediaInfoProto.CarlifeMediaInfo parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeDelimitedFrom(input).buildParsed();
    }
    public static com.baidu.carlife.protobuf.CarlifeMediaInfoProto.CarlifeMediaInfo parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeDelimitedFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static com.baidu.carlife.protobuf.CarlifeMediaInfoProto.CarlifeMediaInfo parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.baidu.carlife.protobuf.CarlifeMediaInfoProto.CarlifeMediaInfo parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.baidu.carlife.protobuf.CarlifeMediaInfoProto.CarlifeMediaInfo prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private com.baidu.carlife.protobuf.CarlifeMediaInfoProto.CarlifeMediaInfo result;
      
      // Construct using com.baidu.carlife.protobuf.CarlifeMediaInfoProto.CarlifeMediaInfo.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new com.baidu.carlife.protobuf.CarlifeMediaInfoProto.CarlifeMediaInfo();
        return builder;
      }
      
      protected com.baidu.carlife.protobuf.CarlifeMediaInfoProto.CarlifeMediaInfo internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new com.baidu.carlife.protobuf.CarlifeMediaInfoProto.CarlifeMediaInfo();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.baidu.carlife.protobuf.CarlifeMediaInfoProto.CarlifeMediaInfo.getDescriptor();
      }
      
      public com.baidu.carlife.protobuf.CarlifeMediaInfoProto.CarlifeMediaInfo getDefaultInstanceForType() {
        return com.baidu.carlife.protobuf.CarlifeMediaInfoProto.CarlifeMediaInfo.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public com.baidu.carlife.protobuf.CarlifeMediaInfoProto.CarlifeMediaInfo build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private com.baidu.carlife.protobuf.CarlifeMediaInfoProto.CarlifeMediaInfo buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public com.baidu.carlife.protobuf.CarlifeMediaInfoProto.CarlifeMediaInfo buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        com.baidu.carlife.protobuf.CarlifeMediaInfoProto.CarlifeMediaInfo returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.baidu.carlife.protobuf.CarlifeMediaInfoProto.CarlifeMediaInfo) {
          return mergeFrom((com.baidu.carlife.protobuf.CarlifeMediaInfoProto.CarlifeMediaInfo)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(com.baidu.carlife.protobuf.CarlifeMediaInfoProto.CarlifeMediaInfo other) {
        if (other == com.baidu.carlife.protobuf.CarlifeMediaInfoProto.CarlifeMediaInfo.getDefaultInstance()) return this;
        if (other.hasSource()) {
          setSource(other.getSource());
        }
        if (other.hasSong()) {
          setSong(other.getSong());
        }
        if (other.hasArtist()) {
          setArtist(other.getArtist());
        }
        if (other.hasAlbum()) {
          setAlbum(other.getAlbum());
        }
        if (other.hasAlbumArt()) {
          setAlbumArt(other.getAlbumArt());
        }
        if (other.hasDuration()) {
          setDuration(other.getDuration());
        }
        if (other.hasPlaylistNum()) {
          setPlaylistNum(other.getPlaylistNum());
        }
        if (other.hasSongId()) {
          setSongId(other.getSongId());
        }
        if (other.hasMode()) {
          setMode(other.getMode());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 10: {
              setSource(input.readString());
              break;
            }
            case 18: {
              setSong(input.readString());
              break;
            }
            case 26: {
              setArtist(input.readString());
              break;
            }
            case 34: {
              setAlbum(input.readString());
              break;
            }
            case 42: {
              setAlbumArt(input.readBytes());
              break;
            }
            case 48: {
              setDuration(input.readInt32());
              break;
            }
            case 56: {
              setPlaylistNum(input.readInt32());
              break;
            }
            case 66: {
              setSongId(input.readString());
              break;
            }
            case 72: {
              setMode(input.readInt32());
              break;
            }
          }
        }
      }
      
      
      // required string source = 1;
      public boolean hasSource() {
        return result.hasSource();
      }
      public java.lang.String getSource() {
        return result.getSource();
      }
      public Builder setSource(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasSource = true;
        result.source_ = value;
        return this;
      }
      public Builder clearSource() {
        result.hasSource = false;
        result.source_ = getDefaultInstance().getSource();
        return this;
      }
      
      // required string song = 2;
      public boolean hasSong() {
        return result.hasSong();
      }
      public java.lang.String getSong() {
        return result.getSong();
      }
      public Builder setSong(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasSong = true;
        result.song_ = value;
        return this;
      }
      public Builder clearSong() {
        result.hasSong = false;
        result.song_ = getDefaultInstance().getSong();
        return this;
      }
      
      // required string artist = 3;
      public boolean hasArtist() {
        return result.hasArtist();
      }
      public java.lang.String getArtist() {
        return result.getArtist();
      }
      public Builder setArtist(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasArtist = true;
        result.artist_ = value;
        return this;
      }
      public Builder clearArtist() {
        result.hasArtist = false;
        result.artist_ = getDefaultInstance().getArtist();
        return this;
      }
      
      // required string album = 4;
      public boolean hasAlbum() {
        return result.hasAlbum();
      }
      public java.lang.String getAlbum() {
        return result.getAlbum();
      }
      public Builder setAlbum(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasAlbum = true;
        result.album_ = value;
        return this;
      }
      public Builder clearAlbum() {
        result.hasAlbum = false;
        result.album_ = getDefaultInstance().getAlbum();
        return this;
      }
      
      // required bytes albumArt = 5;
      public boolean hasAlbumArt() {
        return result.hasAlbumArt();
      }
      public com.google.protobuf.ByteString getAlbumArt() {
        return result.getAlbumArt();
      }
      public Builder setAlbumArt(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasAlbumArt = true;
        result.albumArt_ = value;
        return this;
      }
      public Builder clearAlbumArt() {
        result.hasAlbumArt = false;
        result.albumArt_ = getDefaultInstance().getAlbumArt();
        return this;
      }
      
      // required int32 duration = 6;
      public boolean hasDuration() {
        return result.hasDuration();
      }
      public int getDuration() {
        return result.getDuration();
      }
      public Builder setDuration(int value) {
        result.hasDuration = true;
        result.duration_ = value;
        return this;
      }
      public Builder clearDuration() {
        result.hasDuration = false;
        result.duration_ = 0;
        return this;
      }
      
      // required int32 playlistNum = 7;
      public boolean hasPlaylistNum() {
        return result.hasPlaylistNum();
      }
      public int getPlaylistNum() {
        return result.getPlaylistNum();
      }
      public Builder setPlaylistNum(int value) {
        result.hasPlaylistNum = true;
        result.playlistNum_ = value;
        return this;
      }
      public Builder clearPlaylistNum() {
        result.hasPlaylistNum = false;
        result.playlistNum_ = 0;
        return this;
      }
      
      // required string songId = 8;
      public boolean hasSongId() {
        return result.hasSongId();
      }
      public java.lang.String getSongId() {
        return result.getSongId();
      }
      public Builder setSongId(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasSongId = true;
        result.songId_ = value;
        return this;
      }
      public Builder clearSongId() {
        result.hasSongId = false;
        result.songId_ = getDefaultInstance().getSongId();
        return this;
      }
      
      // required int32 mode = 9;
      public boolean hasMode() {
        return result.hasMode();
      }
      public int getMode() {
        return result.getMode();
      }
      public Builder setMode(int value) {
        result.hasMode = true;
        result.mode_ = value;
        return this;
      }
      public Builder clearMode() {
        result.hasMode = false;
        result.mode_ = 0;
        return this;
      }
    }
    
    static {
      com.baidu.carlife.protobuf.CarlifeMediaInfoProto.getDescriptor();
    }
    
    static {
      com.baidu.carlife.protobuf.CarlifeMediaInfoProto.internalForceInit();
    }
  }
  
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_baidu_carlife_protobuf_CarlifeMediaInfo_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_baidu_carlife_protobuf_CarlifeMediaInfo_fieldAccessorTable;
  
  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\033CarlifeMediaInfoProto.proto\022\032com.baidu" +
      ".carlife.protobuf\"\246\001\n\020CarlifeMediaInfo\022\016" +
      "\n\006source\030\001 \002(\t\022\014\n\004song\030\002 \002(\t\022\016\n\006artist\030\003" +
      " \002(\t\022\r\n\005album\030\004 \002(\t\022\020\n\010albumArt\030\005 \002(\014\022\020\n" +
      "\010duration\030\006 \002(\005\022\023\n\013playlistNum\030\007 \002(\005\022\016\n\006" +
      "songId\030\010 \002(\t\022\014\n\004mode\030\t \002(\005"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
      new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
        public com.google.protobuf.ExtensionRegistry assignDescriptors(
            com.google.protobuf.Descriptors.FileDescriptor root) {
          descriptor = root;
          internal_static_com_baidu_carlife_protobuf_CarlifeMediaInfo_descriptor =
            getDescriptor().getMessageTypes().get(0);
          internal_static_com_baidu_carlife_protobuf_CarlifeMediaInfo_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_baidu_carlife_protobuf_CarlifeMediaInfo_descriptor,
              new java.lang.String[] { "Source", "Song", "Artist", "Album", "AlbumArt", "Duration", "PlaylistNum", "SongId", "Mode", },
              com.baidu.carlife.protobuf.CarlifeMediaInfoProto.CarlifeMediaInfo.class,
              com.baidu.carlife.protobuf.CarlifeMediaInfoProto.CarlifeMediaInfo.Builder.class);
          return null;
        }
      };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
  }
  
  public static void internalForceInit() {}
}
